"use strict";
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
Object.defineProperty(exports, "__esModule", { value: true });
exports.SlotMachine__factory = void 0;
const ethers_1 = require("ethers");
const _abi = [
    {
        inputs: [
            {
                internalType: "address",
                name: "_tokenContract",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "_betAmount",
                type: "uint256",
            },
        ],
        stateMutability: "nonpayable",
        type: "constructor",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "player",
                type: "address",
            },
            {
                indexed: false,
                internalType: "bool",
                name: "success",
                type: "bool",
            },
        ],
        name: "GamePlayed",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "player",
                type: "address",
            },
        ],
        name: "GameWon",
        type: "event",
    },
    {
        inputs: [],
        name: "betAmount",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "player",
                type: "address",
            },
        ],
        name: "hasSufficientFunds",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "owner",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "player",
                type: "address",
            },
        ],
        name: "playGame",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "player",
                type: "address",
            },
        ],
        name: "playerWins",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "_betAmount",
                type: "uint256",
            },
        ],
        name: "setBetAmount",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "_tokenContract",
                type: "address",
            },
        ],
        name: "setTokenContract",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "tokenContract",
        outputs: [
            {
                internalType: "contract IERC20",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
];
const _bytecode = "0x60806040523480156200001157600080fd5b5060405162000f9138038062000f918339818101604052810190620000379190620000f5565b336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550806002819055505050620001a8565b600081519050620000d88162000174565b92915050565b600081519050620000ef816200018e565b92915050565b600080604083850312156200010957600080fd5b60006200011985828601620000c7565b92505060206200012c85828601620000de565b9150509250929050565b600062000143826200014a565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6200017f8162000136565b81146200018b57600080fd5b50565b62000199816200016a565b8114620001a557600080fd5b50565b610dd980620001b86000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c80638b31fb891161005b5780638b31fb89146101275780638da5cb5b14610143578063bbcd5bbe14610161578063d24257c01461017d57610088565b806307c331cd1461008d5780634ced5b23146100bd57806353a79d74146100ed57806355a373d614610109575b600080fd5b6100a760048036038101906100a29190610886565b61019b565b6040516100b49190610a9f565b60405180910390f35b6100d760048036038101906100d29190610886565b6103fc565b6040516100e49190610a9f565b60405180910390f35b610107600480360381019061010291906108d8565b6104b5565b005b61011161054d565b60405161011e9190610aba565b60405180910390f35b610141600480360381019061013c9190610886565b610573565b005b61014b610736565b6040516101589190610a24565b60405180910390f35b61017b60048036038101906101769190610886565b61075a565b005b61018561082c565b6040516101929190610b75565b60405180910390f35b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461022c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161022390610b15565b60405180910390fd5b610235826103fc565b610291578173ffffffffffffffffffffffffffffffffffffffff167f053a1c9b07ced45d8c1466e4f12f5b0d2f80ed2396c0461a570f4537b33f9e4560006040516102809190610a9f565b60405180910390a2600090506103f7565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd8360008054906101000a900473ffffffffffffffffffffffffffffffffffffffff166002546040518463ffffffff1660e01b815260040161031293929190610a3f565b602060405180830381600087803b15801561032c57600080fd5b505af1158015610340573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061036491906108af565b6103a3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161039a90610ad5565b60405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff167f053a1c9b07ced45d8c1466e4f12f5b0d2f80ed2396c0461a570f4537b33f9e4560016040516103ea9190610a9f565b60405180910390a2600190505b919050565b6000600254600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231846040518263ffffffff1660e01b815260040161045c9190610a24565b60206040518083038186803b15801561047457600080fd5b505afa158015610488573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104ac9190610901565b10159050919050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610543576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161053a90610b55565b60405180910390fd5b8060028190555050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610601576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105f890610b35565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb8260196040518363ffffffff1660e01b815260040161065f929190610a76565b602060405180830381600087803b15801561067957600080fd5b505af115801561068d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106b191906108af565b6106f0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106e790610ad5565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff167f78b3193cf31372e77b1f3045481681f86e18e346de12ae7f1ecc322ff0adf1a460405160405180910390a250565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146107e8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107df90610af5565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60025481565b60008135905061084181610d5e565b92915050565b60008151905061085681610d75565b92915050565b60008135905061086b81610d8c565b92915050565b60008151905061088081610d8c565b92915050565b60006020828403121561089857600080fd5b60006108a684828501610832565b91505092915050565b6000602082840312156108c157600080fd5b60006108cf84828501610847565b91505092915050565b6000602082840312156108ea57600080fd5b60006108f88482850161085c565b91505092915050565b60006020828403121561091357600080fd5b600061092184828501610871565b91505092915050565b61093381610ba1565b82525050565b61094281610bb3565b82525050565b61095181610be9565b82525050565b61096081610c0d565b82525050565b6000610973600f83610b90565b915061097e82610c1f565b602082019050919050565b6000610996602983610b90565b91506109a182610c48565b604082019050919050565b60006109b9602383610b90565b91506109c482610c97565b604082019050919050565b60006109dc602083610b90565b91506109e782610ce6565b602082019050919050565b60006109ff602583610b90565b9150610a0a82610d0f565b604082019050919050565b610a1e81610bdf565b82525050565b6000602082019050610a39600083018461092a565b92915050565b6000606082019050610a54600083018661092a565b610a61602083018561092a565b610a6e6040830184610a15565b949350505050565b6000604082019050610a8b600083018561092a565b610a986020830184610957565b9392505050565b6000602082019050610ab46000830184610939565b92915050565b6000602082019050610acf6000830184610948565b92915050565b60006020820190508181036000830152610aee81610966565b9050919050565b60006020820190508181036000830152610b0e81610989565b9050919050565b60006020820190508181036000830152610b2e816109ac565b9050919050565b60006020820190508181036000830152610b4e816109cf565b9050919050565b60006020820190508181036000830152610b6e816109f2565b9050919050565b6000602082019050610b8a6000830184610a15565b92915050565b600082825260208201905092915050565b6000610bac82610bbf565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000610bf482610bfb565b9050919050565b6000610c0682610bbf565b9050919050565b6000610c1882610bdf565b9050919050565b7f5472616e73666572206661696c65640000000000000000000000000000000000600082015250565b7f4f6e6c7920746865206f776e65722063616e207365742074686520746f6b656e60008201527f20636f6e74726163740000000000000000000000000000000000000000000000602082015250565b7f4f6e6c7920746865206f776e65722063616e207472696767657220746865206760008201527f616d650000000000000000000000000000000000000000000000000000000000602082015250565b7f4f6e6c7920746865206f776e65722063616e206465636c61726520612077696e600082015250565b7f4f6e6c7920746865206f776e65722063616e207365742074686520626574206160008201527f6d6f756e74000000000000000000000000000000000000000000000000000000602082015250565b610d6781610ba1565b8114610d7257600080fd5b50565b610d7e81610bb3565b8114610d8957600080fd5b50565b610d9581610bdf565b8114610da057600080fd5b5056fea2646970667358221220e0261dadf0eb587028ee3ddc9c08e98a1128774495707cd8b6ffc1f3bf6f939664736f6c63430008040033";
class SlotMachine__factory extends ethers_1.ContractFactory {
    constructor(...args) {
        if (args.length === 1) {
            super(_abi, _bytecode, args[0]);
        }
        else {
            super(...args);
        }
    }
    deploy(_tokenContract, _betAmount, overrides) {
        return super.deploy(_tokenContract, _betAmount, overrides || {});
    }
    getDeployTransaction(_tokenContract, _betAmount, overrides) {
        return super.getDeployTransaction(_tokenContract, _betAmount, overrides || {});
    }
    attach(address) {
        return super.attach(address);
    }
    connect(signer) {
        return super.connect(signer);
    }
    static createInterface() {
        return new ethers_1.utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.SlotMachine__factory = SlotMachine__factory;
SlotMachine__factory.bytecode = _bytecode;
SlotMachine__factory.abi = _abi;
