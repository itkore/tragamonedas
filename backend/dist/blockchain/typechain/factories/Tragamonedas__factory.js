"use strict";
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
Object.defineProperty(exports, "__esModule", { value: true });
exports.Tragamonedas__factory = void 0;
const ethers_1 = require("ethers");
const _abi = [
    {
        inputs: [
            {
                internalType: "address",
                name: "_tokenAddress",
                type: "address",
            },
            {
                internalType: "address",
                name: "_poolAddress",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "_bet",
                type: "uint256",
            },
        ],
        stateMutability: "nonpayable",
        type: "constructor",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "uint256",
                name: "valorCarrete",
                type: "uint256",
            },
        ],
        name: "CarreteGirado",
        type: "event",
    },
    {
        inputs: [],
        name: "bet",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        name: "carretes",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "owner",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "player",
                type: "address",
            },
        ],
        name: "play",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "pool",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "poolBalance",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "token",
        outputs: [
            {
                internalType: "contract ERC20",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
];
const _bytecode = "0x60806040523480156200001157600080fd5b506040516200117538038062001175833981810160405281019062000037919062000137565b336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555082600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600381905550505050620001ff565b6000815190506200011a81620001cb565b92915050565b6000815190506200013181620001e5565b92915050565b6000806000606084860312156200014d57600080fd5b60006200015d8682870162000109565b9350506020620001708682870162000109565b9250506040620001838682870162000120565b9150509250925092565b60006200019a82620001a1565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b620001d6816200018d565b8114620001e257600080fd5b50565b620001f081620001c1565b8114620001fc57600080fd5b50565b610f66806200020f6000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80638da5cb5b1161005b5780638da5cb5b146100ee57806396365d441461010c578063e492814f1461012a578063fc0c546a146101465761007d565b806311610c251461008257806316f0115b146100a05780635d1dea8a146100be575b600080fd5b61008a610164565b6040516100979190610bc5565b60405180910390f35b6100a861016a565b6040516100b59190610aaf565b60405180910390f35b6100d860048036038101906100d39190610939565b610190565b6040516100e59190610bc5565b60405180910390f35b6100f66101b4565b6040516101039190610aaf565b60405180910390f35b6101146101d8565b6040516101219190610bc5565b60405180910390f35b610144600480360381019061013f91906108e7565b6101de565b005b61014e6106ed565b60405161015b9190610b2a565b60405180910390f35b60035481565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600581815481106101a057600080fd5b906000526020600020016000915090505481565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60045481565b600354600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231836040518263ffffffff1660e01b815260040161023c9190610aaf565b60206040518083038186803b15801561025457600080fd5b505afa158015610268573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061028c9190610962565b10156102cd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102c490610ba5565b60405180910390fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd82306003546040518463ffffffff1660e01b815260040161032e93929190610aca565b602060405180830381600087803b15801561034857600080fd5b505af115801561035c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103809190610910565b6103bf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103b690610b45565b60405180910390fd5b60005b60038110156104a9576103d3610713565b6005828154811061040d577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002001819055507f149a326f7a8e3107307e09e25b0d719026c6f6811f6a19a2b23f8c2c64c834e660058281548110610476577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b906000526020600020015460405161048e9190610bc5565b60405180910390a180806104a190610ce8565b9150506103c2565b5060006104b4610759565b905080156105bb57600060045490506000600481905550600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b8152600401610528929190610b01565b602060405180830381600087803b15801561054257600080fd5b505af1158015610556573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061057a9190610910565b6105b9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105b090610b85565b60405180910390fd5b505b60006064600a6003546105ce9190610c22565b6105d89190610bf1565b9050600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff16836040518363ffffffff1660e01b8152600401610657929190610b01565b602060405180830381600087803b15801561067157600080fd5b505af1158015610685573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106a99190610910565b6106e8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106df90610b65565b60405180910390fd5b505050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008042443360405160200161072b93929190610a72565b6040516020818303038152906040528051906020012060001c9050600a816107539190610d5f565b91505090565b60006005600181548110610796577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b906000526020600020015460056000815481106107dc577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b906000526020600020015414801561087d5750600560028154811061082a577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002001546005600181548110610870577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200154145b1561088b5760019050610890565b600090505b90565b6000813590506108a281610eeb565b92915050565b6000815190506108b781610f02565b92915050565b6000813590506108cc81610f19565b92915050565b6000815190506108e181610f19565b92915050565b6000602082840312156108f957600080fd5b600061090784828501610893565b91505092915050565b60006020828403121561092257600080fd5b6000610930848285016108a8565b91505092915050565b60006020828403121561094b57600080fd5b6000610959848285016108bd565b91505092915050565b60006020828403121561097457600080fd5b6000610982848285016108d2565b91505092915050565b61099481610c7c565b82525050565b6109ab6109a682610c7c565b610d31565b82525050565b6109ba81610cc4565b82525050565b60006109cd602083610be0565b91506109d882610dfb565b602082019050919050565b60006109f0602383610be0565b91506109fb82610e24565b604082019050919050565b6000610a13602483610be0565b9150610a1e82610e73565b604082019050919050565b6000610a36601c83610be0565b9150610a4182610ec2565b602082019050919050565b610a5581610cba565b82525050565b610a6c610a6782610cba565b610d55565b82525050565b6000610a7e8286610a5b565b602082019150610a8e8285610a5b565b602082019150610a9e828461099a565b601482019150819050949350505050565b6000602082019050610ac4600083018461098b565b92915050565b6000606082019050610adf600083018661098b565b610aec602083018561098b565b610af96040830184610a4c565b949350505050565b6000604082019050610b16600083018561098b565b610b236020830184610a4c565b9392505050565b6000602082019050610b3f60008301846109b1565b92915050565b60006020820190508181036000830152610b5e816109c0565b9050919050565b60006020820190508181036000830152610b7e816109e3565b9050919050565b60006020820190508181036000830152610b9e81610a06565b9050919050565b60006020820190508181036000830152610bbe81610a29565b9050919050565b6000602082019050610bda6000830184610a4c565b92915050565b600082825260208201905092915050565b6000610bfc82610cba565b9150610c0783610cba565b925082610c1757610c16610dbf565b5b828204905092915050565b6000610c2d82610cba565b9150610c3883610cba565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610c7157610c70610d90565b5b828202905092915050565b6000610c8782610c9a565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000610ccf82610cd6565b9050919050565b6000610ce182610c9a565b9050919050565b6000610cf382610cba565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610d2657610d25610d90565b5b600182019050919050565b6000610d3c82610d43565b9050919050565b6000610d4e82610dee565b9050919050565b6000819050919050565b6000610d6a82610cba565b9150610d7583610cba565b925082610d8557610d84610dbf565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60008160601b9050919050565b7f4c61207472616e73666572656e63696120646520746f6b656e732066616c6c6f600082015250565b7f4c61207472616e73666572656e63696120646520636f6d6973696f6e2066616c60008201527f6c6f2e0000000000000000000000000000000000000000000000000000000000602082015250565b7f4c61207472616e73666572656e6369612064652067616e616e6369617320666160008201527f6c6c6f2e00000000000000000000000000000000000000000000000000000000602082015250565b7f4e6f207469656e657320737566696369656e74657320746f6b656e7300000000600082015250565b610ef481610c7c565b8114610eff57600080fd5b50565b610f0b81610c8e565b8114610f1657600080fd5b50565b610f2281610cba565b8114610f2d57600080fd5b5056fea264697066735822122063b88c5a44df07c6fbbef4b95066a05231af8fd0c4426e15c3e8ff1a094a222f64736f6c63430008040033";
class Tragamonedas__factory extends ethers_1.ContractFactory {
    constructor(...args) {
        if (args.length === 1) {
            super(_abi, _bytecode, args[0]);
        }
        else {
            super(...args);
        }
    }
    deploy(_tokenAddress, _poolAddress, _bet, overrides) {
        return super.deploy(_tokenAddress, _poolAddress, _bet, overrides || {});
    }
    getDeployTransaction(_tokenAddress, _poolAddress, _bet, overrides) {
        return super.getDeployTransaction(_tokenAddress, _poolAddress, _bet, overrides || {});
    }
    attach(address) {
        return super.attach(address);
    }
    connect(signer) {
        return super.connect(signer);
    }
    static createInterface() {
        return new ethers_1.utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.Tragamonedas__factory = Tragamonedas__factory;
Tragamonedas__factory.bytecode = _bytecode;
Tragamonedas__factory.abi = _abi;
