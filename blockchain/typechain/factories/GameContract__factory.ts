/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { GameContract, GameContractInterface } from "../GameContract";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenContract",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_betAmount",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "betAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "player",
        type: "address",
      },
    ],
    name: "hasSufficientFunds",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "player",
        type: "address",
      },
    ],
    name: "playGame",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_betAmount",
        type: "uint256",
      },
    ],
    name: "setBetAmount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenContract",
        type: "address",
      },
    ],
    name: "setTokenContract",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenContract",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610b07380380610b07833981810160405281019061003291906100eb565b336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550806002819055505050610191565b6000815190506100d081610163565b92915050565b6000815190506100e58161017a565b92915050565b600080604083850312156100fe57600080fd5b600061010c858286016100c1565b925050602061011d858286016100d6565b9150509250929050565b600061013282610139565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b61016c81610127565b811461017757600080fd5b50565b61018381610159565b811461018e57600080fd5b50565b610967806101a06000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c806355a373d61161005b57806355a373d6146100ff5780638da5cb5b1461011d578063bbcd5bbe1461013b578063d24257c0146101575761007d565b806307c331cd146100825780634ced5b23146100b257806353a79d74146100e3575b600080fd5b61009c60048036038101906100979190610541565b610175565b6040516100a991906106ce565b60405180910390f35b6100cc60048036038101906100c79190610541565b610270565b6040516100da92919061077f565b60405180910390f35b6100fd60048036038101906100f89190610593565b610333565b005b6101076103cb565b60405161011491906106e9565b60405180910390f35b6101256103f1565b604051610132919061068a565b60405180910390f35b61015560048036038101906101509190610541565b610415565b005b61015f6104e7565b60405161016c9190610764565b60405180910390f35b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb836002546040518363ffffffff1660e01b81526004016101d69291906106a5565b602060405180830381600087803b1580156101f057600080fd5b505af1158015610204573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610228919061056a565b610267576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161025e90610704565b60405180910390fd5b60019050919050565b6000806000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231856040518263ffffffff1660e01b81526004016102d0919061068a565b60206040518083038186803b1580156102e857600080fd5b505afa1580156102fc573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061032091906105bc565b9050806002548210159250925050915091565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103c1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103b890610744565b60405180910390fd5b8060028190555050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146104a3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161049a90610724565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60025481565b6000813590506104fc816108ec565b92915050565b60008151905061051181610903565b92915050565b6000813590506105268161091a565b92915050565b60008151905061053b8161091a565b92915050565b60006020828403121561055357600080fd5b6000610561848285016104ed565b91505092915050565b60006020828403121561057c57600080fd5b600061058a84828501610502565b91505092915050565b6000602082840312156105a557600080fd5b60006105b384828501610517565b91505092915050565b6000602082840312156105ce57600080fd5b60006105dc8482850161052c565b91505092915050565b6105ee816107b9565b82525050565b6105fd816107cb565b82525050565b61060c81610801565b82525050565b600061061f600f836107a8565b915061062a82610825565b602082019050919050565b60006106426029836107a8565b915061064d8261084e565b604082019050919050565b60006106656025836107a8565b91506106708261089d565b604082019050919050565b610684816107f7565b82525050565b600060208201905061069f60008301846105e5565b92915050565b60006040820190506106ba60008301856105e5565b6106c7602083018461067b565b9392505050565b60006020820190506106e360008301846105f4565b92915050565b60006020820190506106fe6000830184610603565b92915050565b6000602082019050818103600083015261071d81610612565b9050919050565b6000602082019050818103600083015261073d81610635565b9050919050565b6000602082019050818103600083015261075d81610658565b9050919050565b6000602082019050610779600083018461067b565b92915050565b6000604082019050610794600083018561067b565b6107a160208301846105f4565b9392505050565b600082825260208201905092915050565b60006107c4826107d7565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061080c82610813565b9050919050565b600061081e826107d7565b9050919050565b7f5472616e73666572206661696c65640000000000000000000000000000000000600082015250565b7f4f6e6c7920746865206f776e65722063616e207365742074686520746f6b656e60008201527f20636f6e74726163740000000000000000000000000000000000000000000000602082015250565b7f4f6e6c7920746865206f776e65722063616e207365742074686520626574206160008201527f6d6f756e74000000000000000000000000000000000000000000000000000000602082015250565b6108f5816107b9565b811461090057600080fd5b50565b61090c816107cb565b811461091757600080fd5b50565b610923816107f7565b811461092e57600080fd5b5056fea2646970667358221220beef468b113d3e2feb1036dfa45b39335678e5b1f6f88aec3235caa27400ec1164736f6c63430008040033";

export class GameContract__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _tokenContract: string,
    _betAmount: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<GameContract> {
    return super.deploy(
      _tokenContract,
      _betAmount,
      overrides || {}
    ) as Promise<GameContract>;
  }
  getDeployTransaction(
    _tokenContract: string,
    _betAmount: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _tokenContract,
      _betAmount,
      overrides || {}
    );
  }
  attach(address: string): GameContract {
    return super.attach(address) as GameContract;
  }
  connect(signer: Signer): GameContract__factory {
    return super.connect(signer) as GameContract__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GameContractInterface {
    return new utils.Interface(_abi) as GameContractInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): GameContract {
    return new Contract(address, _abi, signerOrProvider) as GameContract;
  }
}
