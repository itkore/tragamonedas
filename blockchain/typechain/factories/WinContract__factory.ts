/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { WinContract, WinContractInterface } from "../WinContract";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenContract",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_winAmount",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "player",
        type: "address",
      },
    ],
    name: "playerWins",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenContract",
        type: "address",
      },
    ],
    name: "setTokenContract",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_winAmount",
        type: "uint256",
      },
    ],
    name: "setWinAmount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenContract",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "winAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610991380380610991833981810160405281019061003291906100eb565b336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550806002819055505050610191565b6000815190506100d081610163565b92915050565b6000815190506100e58161017a565b92915050565b600080604083850312156100fe57600080fd5b600061010c858286016100c1565b925050602061011d858286016100d6565b9150509250929050565b600061013282610139565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b61016c81610127565b811461017757600080fd5b50565b61018381610159565b811461018e57600080fd5b50565b6107f1806101a06000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c806355a373d6146100675780638b31fb89146100855780638da5cb5b146100b5578063bbcd5bbe146100d3578063decb3a90146100ef578063e2b6289a1461010d575b600080fd5b61006f610129565b60405161007c919061059c565b60405180910390f35b61009f600480360381019061009a919061041d565b61014f565b6040516100ac9190610581565b60405180910390f35b6100bd61024a565b6040516100ca919061053d565b60405180910390f35b6100ed60048036038101906100e8919061041d565b61026e565b005b6100f7610340565b6040516101049190610617565b60405180910390f35b6101276004803603810190610122919061046f565b610346565b005b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb836002546040518363ffffffff1660e01b81526004016101b0929190610558565b602060405180830381600087803b1580156101ca57600080fd5b505af11580156101de573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102029190610446565b610241576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610238906105b7565b60405180910390fd5b60019050919050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146102fc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102f3906105d7565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60025481565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103d4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103cb906105f7565b60405180910390fd5b8060028190555050565b6000813590506103ed81610776565b92915050565b6000815190506104028161078d565b92915050565b600081359050610417816107a4565b92915050565b60006020828403121561042f57600080fd5b600061043d848285016103de565b91505092915050565b60006020828403121561045857600080fd5b6000610466848285016103f3565b91505092915050565b60006020828403121561048157600080fd5b600061048f84828501610408565b91505092915050565b6104a181610643565b82525050565b6104b081610655565b82525050565b6104bf8161068b565b82525050565b60006104d2600f83610632565b91506104dd826106af565b602082019050919050565b60006104f5602983610632565b9150610500826106d8565b604082019050919050565b6000610518602583610632565b915061052382610727565b604082019050919050565b61053781610681565b82525050565b60006020820190506105526000830184610498565b92915050565b600060408201905061056d6000830185610498565b61057a602083018461052e565b9392505050565b600060208201905061059660008301846104a7565b92915050565b60006020820190506105b160008301846104b6565b92915050565b600060208201905081810360008301526105d0816104c5565b9050919050565b600060208201905081810360008301526105f0816104e8565b9050919050565b600060208201905081810360008301526106108161050b565b9050919050565b600060208201905061062c600083018461052e565b92915050565b600082825260208201905092915050565b600061064e82610661565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006106968261069d565b9050919050565b60006106a882610661565b9050919050565b7f5472616e73666572206661696c65640000000000000000000000000000000000600082015250565b7f4f6e6c7920746865206f776e65722063616e207365742074686520746f6b656e60008201527f20636f6e74726163740000000000000000000000000000000000000000000000602082015250565b7f4f6e6c7920746865206f776e65722063616e207365742074686520626574206160008201527f6d6f756e74000000000000000000000000000000000000000000000000000000602082015250565b61077f81610643565b811461078a57600080fd5b50565b61079681610655565b81146107a157600080fd5b50565b6107ad81610681565b81146107b857600080fd5b5056fea2646970667358221220bc0dd2512eafefca11d6d0d476d0a3f70c02fe9b38add4af2d8c545dca73670264736f6c63430008040033";

export class WinContract__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _tokenContract: string,
    _winAmount: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<WinContract> {
    return super.deploy(
      _tokenContract,
      _winAmount,
      overrides || {}
    ) as Promise<WinContract>;
  }
  getDeployTransaction(
    _tokenContract: string,
    _winAmount: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _tokenContract,
      _winAmount,
      overrides || {}
    );
  }
  attach(address: string): WinContract {
    return super.attach(address) as WinContract;
  }
  connect(signer: Signer): WinContract__factory {
    return super.connect(signer) as WinContract__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): WinContractInterface {
    return new utils.Interface(_abi) as WinContractInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): WinContract {
    return new Contract(address, _abi, signerOrProvider) as WinContract;
  }
}
